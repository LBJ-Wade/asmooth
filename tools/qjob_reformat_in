#!/bin/sh
#$ -A TG-AST090005
#$ -N reformat
#$ -S /bin/sh
#$ -V
#$ -cwd
#$ -o qjob_ref1_std
#$ -e qjob_ref1_err
#$ -l h_rt=12:00:00
###$ -pe serial 1 # stampede
#$ -pe 1way 16
###$ -q development
#$ -q normal


#
# Job Script for Ranger
#   Combine #node files to one file for z in "redshifts_ref.txt"
#   If output already exists with correct size, it will be skipped
#

#set -x

nccpu=12
ncs="36 48 84"

if [ ! -d global ]; then
  mkdir global
fi

for z in `cat redshifts_ref.txt`
do
  echo "redshift $z"
  for dir in so fof
  do
    if [ ! -d global/$dir ]; then
      mkdir global/$dir
    fi

    cd $dir

    for nc in $ncs
    do
      cd nc$nc
      ncg=`expr $nc \* $nccpu`

      #echo "for $dir $nc"

      if [ ! -d ../../global/$dir/nc$ncg ]; then
        mkdir ../../global/$dir/nc$ncg
      fi

      if [ -f ../../global/$dir/nc$ncg/${z}v_all.dat ]; then
	size=`ls -l ../../global/$dir/nc$ncg/${z}v_all.dat | awk '{print $5}'`
	sizeex=`expr 12 \* $ncg \* $ncg \* $ncg + 12`
	if [ $size -ne $sizeex ]; then
	  echo "SIZE $dir/nc$ncg/${z}v_all.dat is incorrect."
	  echo "$size != $sizeex"
	  echo "reformat2 $nccpu ../../global/$dir/nc$ncg $z"
	  date
	  reformat2 $nccpu ../../global/$dir/nc$ncg $z
	  if [ $? -ne 0 ]; then
	      echo "Error reformat2"; exit
	  fi
	fi
      else
	echo "reformat2 $nccpu ../../global/$dir/nc$ncg $z"
	date
	reformat2 $nccpu ../../global/$dir/nc$ncg $z
	if [ $? -ne 0 ]; then
	  echo "Error reformat2"; exit
	fi
      fi

      #reformat  $nccpu ../../global/$dir/nc$ncg ${z}c 1
      #if [ $? -ne 0 ]; then
      #	echo "Error reformat"; exit
      #fi

      cd ..
    done
    cd ..
  done
done

echo "ALL done."

# reformat <nc_node> <output dir> <input file refix> <length per mesh>
#   nc_node: cube root of number of files (number of nodes in simulation)
#          : 6^3=216 input files
#   output dir: Directory for output (must exist)
#   input file prefix: Input files will be <prefix><i>.dat (i=0,1,2,...)
#   length per mesh: number of data per mesh: 1 for scalar, 3 for vector

# reformat2 in src/analysics/clumping_tree/tools/
# reformat2 <nc_node> <output_dir> <redshift>
# reads n,h,vel data and combine into n_all.dat, ntot_all.dat, v_all.dat data
